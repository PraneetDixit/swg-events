#eventsWrapper {
  margin-top: 5rem;
  margin-bottom: 3rem;
  margin-right: 4rem;
  margin-left: 4rem;
}

#eventsWrapper h2 {
  text-align: center;
  font-size: 2rem;
  padding: 1.25rem;
  color: #002838;
}

.events {
  padding: 10px 30px;
}

#eventsWrapper h2 {
  margin-top: 3rem;
}

#events {
  margin: auto;
  display: grid;
  gap: 30px;
  padding-left: 20px;
  padding-right: 20px;
}

@media (min-width: 1024px) {
  #events {
    grid-template-columns: repeat(3, 1fr);
  }
}

@media (min-width: 768px) and (max-width: 1023px) {
  #events {
    grid-template-columns: repeat(2, 1fr);
  }
}

@media (max-width: 767px) {
  #eventsWrapper {
    margin-top: 5rem;
    margin-left: auto;
    margin-right: auto;
  }

  #events {
    grid-template-columns: 1fr;
  }
}

.event {
  position: relative;
  overflow: hidden;
  cursor: pointer;
  border: 1px solid #ccc;
  border-radius: 0.5rem;
  box-shadow: 0 0 5px #ccc;
  background-color: #cce6e6;
}

.event img {
  width: 100%;
  aspect-ratio: 3/2;
  object-fit: cover;
  object-position: center;
  display: block;
}

.overlay {
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  height: 30%; /* Default: only the bottom 30% is covered */
  background: linear-gradient(to top, rgba(0, 0, 0, 0.6) 0%, transparent 100%);
  transition: height 0.5s ease, background 0.3s ease;
}

.overlay-content {
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  overflow: hidden;
  max-height: 40px; /* Adjust to roughly match the height of your <h3> */
  transition: max-height 0.7s ease;
  padding: 0 20px 10px; /* horizontal padding and a little bottom padding */
  box-sizing: border-box;
}

.overlay-content h3,
.overlay-content p {
  color: #fff;
  margin: 0;
  font-family: sans-serif; /* Adjust font if needed */
}

.overlay-content h3 {
  font-size: 1.25rem;
  margin-bottom: 5px;
  /* The heading is visible by default at the bottom */
}

.overlay-content p {
  font-size: 0.9rem;
  margin-top: 15px;
  text-align: justify;
  /* The paragraph is placed below the heading but is hidden by the containerâ€™s max-height */
}

/* On hover (or when active on mobile) expand the overlay and reveal the description */
.event:hover .overlay {
  height: 100%;
  background: linear-gradient(to top, rgba(0, 0, 0, 0.8) 0%, rgba(0, 0, 0, 0.4) 70%, transparent 100%);
}

.event:hover .overlay-content,
.event.active .overlay-content {
  max-height: 200px; /* Increase as needed so that the <p> becomes visible below the <h3> */
}

.modal {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100vh;
  overflow: hidden;
  background-color: rgba(32, 32, 32, 0.9);
  z-index: 10000;
  display: flex;
  justify-content: center;
  /* align-items: center; */
}

.modal img {
  cursor: zoom-in;
  transition: transform 0.3s ease-out;

  margin-top: 5vh;
  display: flex;
  max-width: 70%;
  max-height: 70vh;
  border-radius: 1.2rem;
  animation: fadeIn 0.2s ease-in;
  user-select: none;
}

.zoomedIn {
  transform: scale(1.5);
  cursor: zoom-out;
}

.modal-out {
  animation: fadeOpacity 0.2s ease-in;
  display: none;
}

.modal-out img {
  animation: fadeOut 0.2s ease-in;
  display: none;
}

.modal-nextimgs {
  display: flex;
  position: absolute;
  bottom: 5%;
}

.modal-nextimgs img {
  border-radius: 0;
  max-height: 64px;
  margin-right: 16px;
  opacity: 0.7;
  transition: 0.2s ease;
  cursor: pointer;
  overflow-x: scroll;
}

.modal-nextimgs img:hover {
  opacity: 1;
}

.modal-icons {
  position: fixed;
  right: 1%;
  top: 1%;
}

.gallery-icons {
  position: fixed;
  top: 40%;
  left: 50%;
  width: 100%;
}

.gallery-icons div {
  display: inline;
  cursor: pointer;
  /* background-color: grey; */
}

.gallery-icons div svg {
  width: 64px;
  height: 64px;
}

.gallery-icons .iconb {
  position: relative;
  left: -40%;
}

.gallery-icons .iconf {
  position: relative;
  left: calc(40% - 128px);
}

.modal-icons svg {
  cursor: pointer;
}

@keyframes fadeIn {
  0% {
    opacity: 0;
    transform: translateY(20px);
  }

  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeOut {
  /*
        Putting display: flex in both durations
        somehow works.
    */
  0% {
    display: flex;
    opacity: 1;
    transform: translateY(0px);
  }

  100% {
    display: flex;
    opacity: 0;
    transform: translateY(20px);
  }
}

@keyframes fadeOpacity {
  from {
    display: flex;
    opacity: 1;
  }

  to {
    display: flex;
    opacity: 0;
  }
}

@media screen and (max-width: 768px) {
  /* .event {
    width: 280px;
    margin: 15px;
  } */

  .modal {
    align-items: center;
  }

  .modal img {
    cursor: zoom-in;
    transition: transform 0.3s ease-out;
    max-width: 90%;
    max-height: 60vh;
    margin-top: 0;
  }

  .modal-nextimgs {
    display: none;
  }

  .gallery-icons {
    top: 80%;
  }
}
